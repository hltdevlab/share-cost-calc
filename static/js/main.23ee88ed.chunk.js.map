{"version":3,"sources":["ListItems/listItems.js","AddItems/addItems.js","AddPeople/addPeople.js","utils.js","CheckboxGroup/checkboxGroup.js","WhoSharing/whoSharing.js","WhatCost/whatCost.js","Combobox/combobox.js","WhoPaid/whoPaid.js","Summary/summary.js","SwitchTransitionContainer/switchTransitionContainer.js","Pagination/pagination.js","Transaction.js","PayableTransaction.js","Ledger.js","calcUtils.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","className","items","updateItems","onDelClick","e","itemToDelete","currentTarget","parentElement","querySelector","textContent","trim","resultItems","filter","item","map","onClick","defaultProps","id","AddItems","title","fieldName","useState","errorMsg","setErrorMsg","itemInputRef","useRef","useEffect","current","focus","isValidInput","value","includes","isDuplicated","onAdd","nameInput","htmlFor","type","ref","onKeyUp","keyCode","onBlur","AddPeople","toCssSelectorSafeString","name","result","replaceAll","isArrayEmpty","array","undefined","length","isObjectEmpty","object","JSON","stringify","to2DecimalStr","floatValue","resultFloat","Math","round","to2Decimal","resultStr","String","isIntegerRegex","RegExp","match","isOneDecimalPlaceOnlyRegex","CheckboxGroup","options","updateValue","isSelectAllToggle","setIsSelectAllToggle","thisRef","generateValue","isAllSelected","isAllDeselected","thisElem","newValue","querySelectorAll","forEach","checkbox","checked","Object","keys","key","option","derivedItemId","onChange","WhoSharing","itemName","people","childValue","WhatCost","inputRef","select","inputElem","parseFloat","isNaN","min","max","step","Combobox","selectRef","selectElem","i","disabled","WhoPaid","idPrefix","Summary","summaryText","SwitchTransitionContainer","keyIndex","children","nodeRef","SwitchTransition","mode","CSSTransition","classNames","timeout","Pagination","maxCount","pageIndex","updateIndex","Transaction","description","amount","this","transaction","Utils","PayablePayableTransaction","personToPayTo","PAYABLE_TRANSACTION_DESC_PREFIX","regex","replace","Ledger","person","transactions","payableTransactions","descriptionToAdd","getDescription","amountToAdd","getAmount","foundTransaction","find","payableTransaction","existingAmount","setAmount","PayableTransaction","getPersonToPayTo","personToFind","payableTransactionToDelete","equals","str","toString","calculate","whoSharingJson","whatCostJson","whoPaidJson","ledgers","cost","ledger","addTransaction","isSharedBy","peopleSharingThisItem","costPerPerson","getTransactions","transction","personToPay","addPayableTransaction","entries","pairs","findPayableTransactionPairs","processPayableTransactionPairs","console","log","generateSummary","person1","ledger1","getPayableTransactions","person1PayableTransaction","person2","ledger2","person2PayableTransaction","pair","push","payableTransactionPairs","payableTransactionPair","payableTransaction1","payableTransaction2","deletePayableTransaction","summaryStr","personWhoPaid","peopleBooleanJson","peopleYes","peopleNo","theOne","reduce","accumulator","currentValue","App","setPeople","setItems","setSummaryText","index","setIndex","setWhoSharingJson","setWhatCostJson","setWhoPaidJson","text","calculateReturnText","cards","data","dataStr","whoSharingCards","whoPaidCards","whatCostCards","childIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23ee88ed.chunk.js","sourcesContent":["import './listItems.css';\r\n\r\nfunction ListItems(props) {\r\n    const {\r\n        className,\r\n        items,\r\n        updateItems\r\n    } = props;\r\n\r\n    const onDelClick = (e) => {\r\n        const parentElem = e.currentTarget.parentElement;\r\n        const spanElem = parentElem.querySelector(`.${className}__item-text`);\r\n        const itemToDelete = spanElem.textContent.trim();\r\n\r\n        const resultItems = items.filter((item) => (item !== itemToDelete));\r\n        updateItems([...resultItems]);\r\n    }\r\n\r\n    return (\r\n        <ul className={className}>\r\n            {\r\n                items.map(\r\n                    item => (\r\n                        <li\r\n                            key={item}\r\n                            className={`${className}__item`}\r\n                        >\r\n                            <div className={`${className}__item-text`}>\r\n                                {item}\r\n                            </div>\r\n                            <div className={`${className}__item-dots`} />\r\n                            <button\r\n                                onClick={onDelClick}\r\n                            >\r\n                                X\r\n                            </button>\r\n                        </li>\r\n                    )\r\n                )\r\n            }\r\n        </ul>\r\n    );\r\n}\r\n\r\nListItems.defaultProps = {\r\n    id: 'list-items',\r\n    className: 'list-items',\r\n    items: [],\r\n    updateItems: () => {}\r\n  };\r\n\r\nexport default ListItems;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport ListItems from '../ListItems/listItems';\r\nimport './addItems.css';\r\n\r\nfunction AddItems(props) {\r\n  const {\r\n    id,\r\n    className,\r\n    title,\r\n    fieldName,\r\n    items,\r\n    updateItems\r\n  } = props;\r\n  \r\n  const [errorMsg, setErrorMsg] = useState('');\r\n\r\n  const itemInputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    itemInputRef.current.focus();\r\n  }, []);\r\n\r\n  // handler functions\r\n  const onKeyup = (e) => {\r\n    isValidInput();\r\n    if (13 === e.keyCode) {\r\n      onAdd();\r\n    }\r\n  };\r\n\r\n  const isDuplicated = (value) => {\r\n    return items.includes(value);\r\n  };\r\n\r\n  const isValidInput = () => {\r\n    const nameInput = itemInputRef.current;\r\n    const value = nameInput.value.trim();\r\n\r\n    if (isDuplicated(value)) {\r\n      setErrorMsg(`${fieldName} already exist!`);\r\n      return false;\r\n    }\r\n\r\n    setErrorMsg('');\r\n    return true;\r\n  };\r\n\r\n  const onAdd = (e) => {\r\n    const nameInput = itemInputRef.current;\r\n    const value = nameInput.value.trim();\r\n    nameInput.focus();\r\n\r\n    if (value === '') {\r\n      setErrorMsg(`${fieldName} cannot be blank!`);\r\n      return;\r\n    }\r\n\r\n    if (isValidInput()) {\r\n      updateItems([...items, value]);\r\n      nameInput.value = '';\r\n    }\r\n  };\r\n\r\n  const onInputBlur = (e) => {\r\n    const nameInput = itemInputRef.current;\r\n    const value = nameInput.value.trim();\r\n\r\n    // so that when not in focus and the text field is blank, can clear the error message.\r\n    if (value === '') {\r\n      setErrorMsg('');\r\n    }\r\n  };\r\n\r\n  // renderer\r\n  return (\r\n    <div\r\n      id={id}\r\n      className={className}\r\n    >\r\n      <h1\r\n        className={`${className}__title`}\r\n      >\r\n        {title}\r\n      </h1>\r\n\r\n      <label\r\n        className={`${className}__lbl`}\r\n        htmlFor={`${id}__input`}\r\n      >\r\n        <span\r\n          className={`${className}__lbl-span`}\r\n        >\r\n          {`${fieldName}:`}\r\n        </span>\r\n        <input\r\n          id={`${id}__input`}\r\n          className={\r\n            errorMsg ? \r\n            `${className}__input-txt ${className}__input-txt--err`\r\n            : `${className}__input-txt`\r\n          }\r\n          type=\"text\"\r\n          ref={itemInputRef}\r\n          onKeyUp={onKeyup}\r\n          onBlur={onInputBlur}\r\n        />\r\n        <span\r\n          className={`err-msg`}\r\n        >\r\n          {errorMsg}\r\n        </span>\r\n      </label>\r\n\r\n      <button\r\n        className={`${className}__btn`}\r\n        onClick={onAdd}\r\n      >\r\n        Add\r\n      </button>\r\n      <ListItems\r\n        items={items}\r\n        updateItems={updateItems}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nAddItems.defaultProps = {\r\n  id: 'add-items',\r\n  className: 'add-items',\r\n  title: 'Adding Items...',\r\n  fieldName: 'Item',\r\n  items: [],\r\n  updateItems: () => {}\r\n};\r\n\r\nexport default AddItems;\r\n","import AddItems from '../AddItems/addItems';\r\n\r\nfunction AddPeople(props) {\r\n  // renderer\r\n  return (\r\n    <AddItems\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nAddPeople.defaultProps = {\r\n  id: 'add-people',\r\n  title: 'Adding People...',\r\n  fieldName: 'Name'\r\n};\r\n\r\nexport default AddPeople;\r\n","export const toCssSelectorSafeString = (name) => {\r\n    // invalid characters:\r\n    // ~ ! @ $ % ^ & * ( ) + = , . / ‘ ; : ” ? > < [ ] \\ { } | ` # <space>\r\n    const regex = /[~ ! @ $ % ^ & * ( ) + = , . / ‘ ; : ” ? > < \\\\[ \\\\] \\\\\\\\ { } \\\\| ` #]/g;\r\n    let result = '_';\r\n    result += name\r\n        .replaceAll(regex, '-')\r\n        .replaceAll('--', '-');\r\n\r\n    return result;\r\n};\r\n\r\nexport const isArrayEmpty = (array) => {\r\n    return (\r\n        array === undefined\r\n        || array === null\r\n        || array.length === 0\r\n    );\r\n};\r\n\r\nexport const isObjectEmpty = (object) => {\r\n    return (\r\n        object === undefined\r\n        || object === null\r\n        || JSON.stringify({}) === JSON.stringify(object)\r\n    );\r\n};\r\n\r\nexport const to2Decimal = (floatValue) => {\r\n    return Math.round(floatValue * 100) / 100;\r\n};\r\n\r\nexport const to2DecimalStr = (floatValue) => {\r\n    const resultFloat = to2Decimal(floatValue);\r\n    const resultStr = String(resultFloat);\r\n\r\n    const isIntegerRegex = new RegExp(\r\n        '^-*\\\\d+$',\r\n        'i'\r\n    );\r\n    if (resultStr.match(isIntegerRegex)) {\r\n        return resultStr;\r\n    }\r\n\r\n    // if float value only has one decimal place, append a '0' behind.\r\n    const isOneDecimalPlaceOnlyRegex = new RegExp(\r\n        '^-*\\\\d+\\\\.\\\\d$',\r\n        'i'\r\n    );\r\n    if (resultStr.match(isOneDecimalPlaceOnlyRegex)) {\r\n        return `${resultStr}0`;\r\n    }\r\n\r\n    return resultStr;\r\n};\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { toCssSelectorSafeString } from '../utils';\r\nimport \"./checkboxGroup.css\";\r\n\r\nfunction CheckboxGroup(props) {\r\n  const {\r\n    id,\r\n    className,\r\n    name,\r\n    options,\r\n    value,\r\n    updateValue\r\n  } = props;\r\n\r\n  const [isSelectAllToggle, setIsSelectAllToggle] = useState(false);\r\n\r\n  const thisRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    updateValue(generateValue());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isAllSelected() && !isSelectAllToggle) {\r\n      setIsSelectAllToggle(true);\r\n    }\r\n    else if (isAllDeselected() && isSelectAllToggle) {\r\n      setIsSelectAllToggle(false);\r\n    }\r\n  }, [value]);\r\n\r\n  const generateValue = () => {\r\n    const thisElem = thisRef.current;\r\n    let newValue = {};\r\n    const checkboxes = thisElem.querySelectorAll('input[type=\"checkbox\"]');\r\n    checkboxes.forEach((checkbox) => {\r\n      newValue[checkbox.value] = checkbox.checked;\r\n    });\r\n    return newValue;\r\n  };\r\n\r\n  const isAllSelected = () => {\r\n    for (const key of Object.keys(value)) {\r\n      const isSelected = value[key];\r\n      if (!isSelected) return false;\r\n    }\r\n    return true;\r\n  };\r\n  const isAllDeselected = () => {\r\n    for (const key of Object.keys(value)) {\r\n      const isSelected = value[key];\r\n      if (isSelected) return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // renderer\r\n  return (\r\n    <div\r\n      id={id}\r\n      className={className}\r\n      ref={thisRef}\r\n    >\r\n      {\r\n        options.map(\r\n          (option) => {\r\n            const derivedItemId = toCssSelectorSafeString(option);\r\n            \r\n            return (\r\n              <label\r\n                key={option}\r\n                htmlFor={`${id}__${derivedItemId}`}\r\n                >\r\n                <input\r\n                  id={`${id}__${derivedItemId}`}\r\n                  className={`${className}__checkbox`}\r\n                  type=\"checkbox\"\r\n                  name={name}\r\n                  value={option}\r\n                  checked={value[option] ? true : false}\r\n                  onChange={(e) => {\r\n                    updateValue(generateValue());\r\n                  }}\r\n                />\r\n                <span>{option}</span>\r\n              </label>\r\n            );\r\n          }\r\n        )\r\n      }\r\n      <button\r\n        onClick={() => {\r\n          const thisElem = thisRef.current;\r\n          const checkboxes = thisElem.querySelectorAll('input[type=\"checkbox\"]');\r\n          checkboxes.forEach((checkbox) => {\r\n            checkbox.checked = !isSelectAllToggle;\r\n          });\r\n          setIsSelectAllToggle(!isSelectAllToggle);\r\n\r\n          updateValue(generateValue());\r\n        }}\r\n      >\r\n        {isSelectAllToggle ? 'Deselect All' : 'Select All'}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nCheckboxGroup.defaultProps = {\r\n  id: '',\r\n  className: 'checkbox-group',\r\n  name: '',\r\n  options: [],\r\n  value: {},\r\n  updateValue: () => {}\r\n};\r\n\r\nexport default CheckboxGroup;\r\n","import { useRef } from \"react\";\r\nimport CheckboxGroup from '../CheckboxGroup/checkboxGroup';\r\nimport { toCssSelectorSafeString } from '../utils';\r\nimport './whoSharing.css';\r\n\r\nfunction WhoSharing(props) {\r\n  const {\r\n    className,\r\n    title,\r\n    itemName,\r\n    people,\r\n    value,\r\n    updateValue\r\n  } = props;\r\n\r\n  const thisRef = useRef(null);\r\n\r\n  // renderer\r\n  return (\r\n    <div\r\n      className={className}\r\n      ref={thisRef}\r\n    >\r\n      <h1 className={`${className}__title`}>\r\n        {`${title} `}\r\n        <span  className={`${className}__item-name`}>\r\n          {itemName}\r\n        </span>\r\n        ?\r\n      </h1>\r\n\r\n      <CheckboxGroup\r\n        id={toCssSelectorSafeString(itemName)}\r\n        name={toCssSelectorSafeString(itemName)}\r\n        options={people}\r\n        value={value[itemName]}\r\n        updateValue={(childValue) => {\r\n          const childValueStr = JSON.stringify(childValue);\r\n          const valueStr = JSON.stringify(value[itemName]);\r\n          if (childValueStr !== valueStr) {\r\n            const newValue = {};\r\n            newValue[itemName] = {...childValue};\r\n            updateValue(newValue);\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nWhoSharing.defaultProps = {\r\n  className: 'who-sharing',\r\n  title: 'Who Sharing',\r\n  itemName: '',\r\n  people: [],\r\n  value: {},\r\n  updateValue: () => {}\r\n};\r\n\r\nexport default WhoSharing;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport './whatCost.css';\r\n\r\nfunction WhatCost(props) {\r\n  const {\r\n    id,\r\n    className,\r\n    title,\r\n    itemName,\r\n    fieldName,\r\n    value,\r\n    updateValue\r\n  } = props;\r\n  \r\n  const [errorMsg, setErrorMsg] = useState('');\r\n\r\n  const thisRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n    inputRef.current.select();\r\n    updateValue(generateValue());\r\n  }, []);\r\n\r\n  // handler functions\r\n  const isValidInput = () => {\r\n    const inputElem = inputRef.current;\r\n    const floatValue = parseFloat(inputElem.value);\r\n\r\n    if (isNaN(floatValue)) {\r\n      setErrorMsg('Please input valid number.');\r\n    }\r\n    else if (inputElem.min && floatValue < inputElem.min) {\r\n      setErrorMsg(`Value must not be lesser than ${inputElem.min}.`);\r\n    }\r\n    else if (inputElem.max && floatValue > inputElem.max) {\r\n      setErrorMsg(`Value must not be more than ${inputElem.max}.`);\r\n    }\r\n    else {\r\n      setErrorMsg('');\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const generateValue = () => {\r\n    const newValue = {};\r\n    if (isValidInput()) {\r\n      const inputElem = inputRef.current;\r\n      const floatValue = parseFloat(inputElem.value);\r\n      newValue[itemName] = floatValue;\r\n      return newValue;\r\n    }\r\n    return newValue[itemName] = 0;\r\n  }\r\n\r\n  const _onChange = (e) => {\r\n    isValidInput();\r\n    const inputElem = inputRef.current;\r\n    const newValue = {};\r\n    const floatValue = parseFloat(inputElem.value);\r\n    newValue[itemName] = floatValue;\r\n    updateValue(newValue);\r\n    \r\n  };\r\n\r\n  // renderer\r\n  return (\r\n    <div\r\n      id={id}\r\n      className={className}\r\n      ref={thisRef}\r\n    >\r\n      <h1 className={`${className}__title`}>\r\n        {`${title} `}\r\n        <span className={`${className}__item-name`}>\r\n          {itemName}\r\n        </span>\r\n        ?\r\n      </h1>\r\n\r\n      <label\r\n        className={`${className}__lbl`}\r\n        htmlFor={`${id}__input`}\r\n      >\r\n        <span className={`${className}__lbl-span`}>\r\n          {`${fieldName}:`}\r\n        </span>\r\n        <input\r\n          id={`${id}__input`}\r\n          className={\r\n            errorMsg ? \r\n            `${className}__input-txt ${className}__input-txt--err`\r\n            : `${className}__input-txt`\r\n          }\r\n          type=\"number\"\r\n          step=\"0.01\"\r\n          min=\"0\"\r\n          ref={inputRef}\r\n          value={value}\r\n          onChange={_onChange}\r\n        />\r\n        <span className={`err-msg`}>\r\n          {errorMsg}\r\n        </span>\r\n      </label>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nWhatCost.defaultProps = {\r\n  id: 'what-cost',\r\n  className: 'what-cost',\r\n  title: 'What is the Cost of',\r\n  itemName: '',\r\n  fieldName: 'Cost ($)',\r\n  value: 0,\r\n  updateValue: () => {}\r\n};\r\n\r\nexport default WhatCost;\r\n","\r\nimport { useRef } from 'react';\r\n\r\nfunction Combobox(props) {\r\n  const {\r\n    id,\r\n    className,\r\n    fieldName,\r\n    options,\r\n    errorMsg,\r\n    value,\r\n    updateValue\r\n  } = props;\r\n\r\n  const thisRef = useRef(null);\r\n  const selectRef = useRef(null);\r\n\r\n  // renderer\r\n  return (\r\n    <label\r\n      htmlFor={id}\r\n      ref={thisRef}\r\n    >\r\n      <span>\r\n        {fieldName ? `${fieldName}:` : ''}\r\n      </span>\r\n      <select\r\n        id={id}\r\n        className={className}\r\n        ref={selectRef}\r\n        value={value}\r\n        onChange={(e) => {\r\n          const selectElem = selectRef.current;\r\n          updateValue(selectElem.value);\r\n        }}\r\n      >\r\n        {\r\n          ['', ...options].map((item, i) => {\r\n            if (item === '') {\r\n              return (\r\n                <option\r\n                  key={item}\r\n                  disabled={value === '' ? false : true}\r\n                >\r\n                  Please choose...\r\n                </option>\r\n              );\r\n            }\r\n            return (\r\n              <option\r\n                key={item}\r\n              >\r\n                {item}\r\n              </option>\r\n            );\r\n          })\r\n        }\r\n      </select>\r\n      <span\r\n        className={`err-msg`}\r\n      >\r\n        {errorMsg}\r\n      </span>\r\n    </label>\r\n  );\r\n}\r\n\r\nCombobox.defaultProps = {\r\n  id: '',\r\n  className: '',\r\n  fieldName: '',\r\n  options: [],\r\n  errorMsg: '',\r\n  value: '',\r\n  updateValue: () => {}\r\n};\r\n\r\nexport default Combobox;\r\n","import { useRef, useState } from 'react';\r\nimport Combobox from '../Combobox/combobox';\r\nimport { toCssSelectorSafeString } from '../utils';\r\nimport './whoPaid.css';\r\n\r\nfunction WhoPaid(props) {\r\n  const {\r\n    idPrefix,\r\n    className,\r\n    title,\r\n    itemName,\r\n    people,\r\n    value,\r\n    updateValue\r\n  } = props;\r\n\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n\r\n  const thisRef = useRef(null);\r\n\r\n  // renderer\r\n  return (\r\n    <div\r\n      id={`${idPrefix}-${toCssSelectorSafeString(itemName)}`}\r\n      className={className}\r\n      ref={thisRef}\r\n    >\r\n      <h1 className={`${className}__title`}>\r\n        {`${title} `}\r\n        <span className={`${className}__item-name`}>\r\n          {itemName}\r\n        </span>\r\n        ?\r\n      </h1>\r\n\r\n      <Combobox\r\n        id={`${idPrefix}-${toCssSelectorSafeString(itemName)}__combobox`}\r\n        options={people}\r\n        errorMsg=\"\"\r\n        value={value[itemName]}\r\n        updateValue={(childValue) => {\r\n          if (childValue !== value) {\r\n            const newValue = {};\r\n            newValue[itemName] = childValue;\r\n            updateValue(newValue);\r\n          }\r\n        }}\r\n      />\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nWhoPaid.defaultProps = {\r\n  idPrefix: 'who-paid',\r\n  className: 'who-paid',\r\n  title: 'Who Paid for',\r\n  itemName: '',\r\n  people: [],\r\n  value: {},\r\n  updateValue: () => {}\r\n};\r\n\r\nexport default WhoPaid;\r\n","import './summary.css';\r\n\r\nfunction Summary(props) {\r\n    const {\r\n        className,\r\n        title,\r\n        summaryText\r\n     } = props;\r\n\r\n    return (\r\n        <div className={className}>\r\n            <h1 className={`${className}__title`}>\r\n                {`${title}`}\r\n            </h1>\r\n            <pre className={`${className}__summary-text`}>\r\n                {summaryText}\r\n            </pre>\r\n        </div>\r\n    );\r\n}\r\n\r\nSummary.defaultProps = {\r\n    className: 'summary',\r\n    title: 'Summary',\r\n    summaryText: ''\r\n  };\r\n\r\nexport default Summary;","import { useRef } from 'react';\r\nimport { SwitchTransition, CSSTransition } from \"react-transition-group\";\r\nimport './switchTransitionContainer.css';\r\n\r\nfunction SwitchTransitionContainer(props) {\r\n    const {\r\n        className,\r\n        // direction,\r\n        keyIndex,\r\n        children\r\n    } = props;\r\n    const nodeRef = useRef(null);\r\n\r\n    return (\r\n        <SwitchTransition mode=\"out-in\">\r\n            <CSSTransition\r\n                nodeRef={nodeRef}\r\n                key={keyIndex}\r\n                classNames={className}\r\n                timeout={200}\r\n            >\r\n                <div\r\n                    className={className}\r\n                    ref={nodeRef}\r\n                >\r\n                    {children}\r\n                </div>\r\n            </CSSTransition>\r\n        </SwitchTransition>\r\n    );\r\n}\r\n\r\nSwitchTransitionContainer.defaultProps = {\r\n    className: 'switch-transition-container',\r\n    // direction: 'left',\r\n    keyIndex: 0\r\n};\r\n\r\nexport default SwitchTransitionContainer;\r\n","import './pagination.css';\r\n\r\nfunction Pagination(props) {\r\n    const {\r\n        className,\r\n        maxCount,\r\n        pageIndex,\r\n        updateIndex\r\n    } = props;\r\n\r\n    const onPrev = () => {\r\n        updateIndex(\r\n            pageIndex === 0\r\n                ? maxCount - 1\r\n                : pageIndex - 1\r\n        );\r\n    };\r\n\r\n    const onNext = () => {\r\n        updateIndex(\r\n            pageIndex === (maxCount - 1)\r\n                ? 0\r\n                : pageIndex + 1\r\n        );\r\n    };\r\n    \r\n    return (\r\n        <div className={className}>\r\n            {   // if is first page then do not render\r\n                pageIndex === 0\r\n                    ? null\r\n                    : (\r\n                        <button\r\n                            className=\"pagination__prev-btn\"\r\n                            onClick={onPrev}\r\n                        >\r\n                            {'<'}\r\n                        </button>\r\n                    )\r\n            }\r\n            \r\n            <div\r\n                className=\"pagination__page-num-text\"\r\n            >\r\n                {`${pageIndex + 1} / ${maxCount}`}\r\n            </div>\r\n\r\n            {   // if is last page then do not render\r\n                pageIndex === (maxCount - 1)\r\n                    ? null\r\n                    : (\r\n                        <button\r\n                            className=\"pagination__next-btn\"\r\n                            onClick={onNext}\r\n                        >\r\n                            {'>'}\r\n                        </button>\r\n                    )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nPagination.defaultProps = {\r\n    className: 'pagination',\r\n    maxCount: 0,\r\n    pageIndex: 0,\r\n    updateIndex: () => {}\r\n};\r\n\r\nexport default Pagination;","import * as Utils from './utils';\r\n\r\nclass Transaction {\r\n    constructor(description, amount) {\r\n        this.description = description;\r\n        this.amount = amount;\r\n    }\r\n\r\n    getDescription() {\r\n        return this.description;\r\n    }\r\n\r\n    getAmount() {\r\n        return this.amount;\r\n        // return this.__to2Decimal(this.amount);\r\n    }\r\n\r\n    setAmount(amount) {\r\n        this.amount = amount;\r\n    }\r\n\r\n    equals(transaction) {\r\n        const transactionStr1 = JSON.stringify(this);\r\n        const transactionStr2 = JSON.stringify(transaction);\r\n        return (transactionStr1 === transactionStr2);\r\n    }\r\n\r\n    toString() {\r\n        return `${this.description}: $${Utils.to2DecimalStr(this.amount)}`;\r\n    }\r\n};\r\n\r\nexport default Transaction;","import Transaction from './Transaction';\r\n\r\nclass PayablePayableTransaction extends Transaction {\r\n    PAYABLE_TRANSACTION_DESC_PREFIX = 'pay to ';\r\n\r\n    constructor(personToPayTo, amount) {\r\n        super(personToPayTo, amount);\r\n        this.description = `${this.PAYABLE_TRANSACTION_DESC_PREFIX}${personToPayTo}`;\r\n    }\r\n\r\n    getPersonToPayTo() {\r\n        const regex = new RegExp(\r\n            `(${this.PAYABLE_TRANSACTION_DESC_PREFIX})*`,\r\n            'i'\r\n        );\r\n        const personToPayTo = this.description.replace(regex, '');\r\n        return personToPayTo;\r\n    }\r\n};\r\n\r\nexport default PayablePayableTransaction;","import PayableTransaction from './PayableTransaction';\r\n\r\nclass Ledger {\r\n    constructor(person) {\r\n        this.person = person;\r\n        this.transactions = [];\r\n        this.payableTransactions = [];\r\n    }\r\n\r\n    getTransactions() {\r\n        return this.transactions;\r\n    }\r\n\r\n    addTransaction(transaction) {\r\n        this.transactions = [...this.transactions, transaction];\r\n    }\r\n\r\n    getPayableTransactions() {\r\n        return this.payableTransactions;\r\n    }\r\n\r\n    addPayableTransaction_old(transaction) {\r\n        const descriptionToAdd = transaction.getDescription();\r\n        const amountToAdd = transaction.getAmount();\r\n\r\n        const foundTransaction = this.payableTransactions.find((payableTransaction) => {\r\n            const existingDescription = payableTransaction.getDescription();\r\n            return (existingDescription === descriptionToAdd);\r\n        });\r\n\r\n        if (foundTransaction) {\r\n            // update existing payableTransactions\r\n            const existingAmount = foundTransaction.getAmount();\r\n            foundTransaction.setAmount(\r\n                existingAmount + amountToAdd\r\n            );\r\n        }\r\n        else {\r\n            // add new entry to payableTransactions\r\n            this.payableTransactions = [...this.payableTransactions, transaction];\r\n        }\r\n    }\r\n\r\n    addPayableTransaction(personToPayTo, amount) {\r\n        const transaction = new PayableTransaction(personToPayTo, amount)\r\n\r\n        const foundTransaction = this.payableTransactions.find((payableTransaction) => {\r\n            const existingPersonToPayTo = payableTransaction.getPersonToPayTo();\r\n            return (existingPersonToPayTo === personToPayTo);\r\n        });\r\n\r\n        if (foundTransaction) {\r\n            // update existing payableTransactions\r\n            const existingAmount = foundTransaction.getAmount();\r\n            foundTransaction.setAmount(\r\n                existingAmount + amount\r\n            );\r\n        }\r\n        else {\r\n            // add new entry to payableTransactions\r\n            this.payableTransactions = [...this.payableTransactions, transaction];\r\n        }\r\n    }\r\n\r\n    findPayableTransaction(personToFind) {\r\n        const payableTransaction = this.payableTransactions\r\n            .find((payableTransaction) => (\r\n                payableTransaction.getPersonToPayTo() === personToFind\r\n            ));\r\n        return payableTransaction;\r\n    }\r\n\r\n    deletePayableTransaction(payableTransactionToDelete) {\r\n        this.payableTransactions = this.payableTransactions.filter((payableTransaction) => {\r\n            return (!payableTransaction.equals(payableTransactionToDelete))\r\n        });\r\n    }\r\n\r\n    toString() {\r\n        let str = `${this.person}:\\n`;\r\n        this.transactions.forEach((transaction) => {\r\n            str += `  ${transaction.toString()}\\n`\r\n        });\r\n        str += `  --------------------\\n`;\r\n        this.payableTransactions.forEach((transaction) => {\r\n            str += `  ${transaction.toString()}\\n`\r\n        });\r\n        str += `  ====================\\n\\n`;\r\n        return str;\r\n    }\r\n};\r\n\r\nexport default Ledger;","import * as Utils from './utils';\r\nimport Ledger from './Ledger';\r\nimport Transaction from './Transaction';\r\n\r\nexport const calculateReturnText = ({\r\n    people,\r\n    items,\r\n    whoSharingJson,\r\n    whatCostJson,\r\n    whoPaidJson\r\n}) => {\r\n    const ledgers = calculate({\r\n        people,\r\n        items,\r\n        whoSharingJson,\r\n        whatCostJson,\r\n        whoPaidJson\r\n    });\r\n\r\n    if (!ledgers) {\r\n        return '';\r\n    }\r\n\r\n    let text = generateSummary({\r\n        people,\r\n        items,\r\n        whoSharingJson,\r\n        whatCostJson,\r\n        whoPaidJson\r\n    });\r\n    text += '******************************\\n\\n';\r\n\r\n    people.forEach(person => {\r\n        const ledger = ledgers[person];\r\n        text += ledger.toString();\r\n    });\r\n    return text;\r\n};\r\n\r\n\r\nexport const calculate = ({\r\n    people,\r\n    items,\r\n    whoSharingJson,\r\n    whatCostJson,\r\n    whoPaidJson\r\n}) => {\r\n    if (\r\n        Utils.isArrayEmpty(people)\r\n        || Utils.isArrayEmpty(items)\r\n        || Utils.isObjectEmpty(whoSharingJson)\r\n        || Utils.isObjectEmpty(whatCostJson)\r\n        || Utils.isObjectEmpty(whoPaidJson)\r\n    ) {\r\n        return null;\r\n    }\r\n\r\n    \r\n    const ledgers = {};\r\n    people.forEach((person) => {\r\n        ledgers[person] = new Ledger(person);\r\n    });\r\n\r\n    items.forEach((item) => {\r\n        const cost = whatCostJson[item];\r\n        const person = whoPaidJson[item];\r\n        const ledger = ledgers[person]\r\n        if (ledger) {\r\n            ledger.addTransaction(\r\n                new Transaction(item, (-cost))\r\n            );\r\n        }\r\n    });\r\n\r\n    items.forEach((item) => {\r\n        const cost = whatCostJson[item];\r\n        const isSharedBy = whoSharingJson[item];\r\n\r\n        if (isSharedBy) {\r\n            const peopleSharingThisItem = people.filter(\r\n                (person) => (isSharedBy[person])\r\n            );\r\n    \r\n            const costPerPerson = cost / peopleSharingThisItem.length;\r\n    \r\n            peopleSharingThisItem.forEach((person) => {\r\n                ledgers[person].addTransaction(\r\n                    new Transaction(item, costPerPerson)\r\n                );\r\n            });\r\n        }\r\n    });\r\n\r\n    \r\n    for (const [person, ledger] of Object.entries(ledgers)) {\r\n        const transctions = ledger.getTransactions();\r\n        transctions.filter(\r\n            // filter all transaction that is negative,\r\n            // which means initially paid transaction.\r\n            (transction) => (transction.getAmount() > 0)\r\n        ).filter(\r\n            // filter all transaction that is paid by\r\n            // this person.\r\n            (transction) => {\r\n                const item = transction.getDescription();\r\n                const personToPay = whoPaidJson[item];\r\n                return (person !== personToPay);\r\n            }\r\n        ).forEach((transction) => {\r\n            const item = transction.getDescription();\r\n            const amount = transction.getAmount();\r\n            const personToPay = whoPaidJson[item];\r\n            if (personToPay) {\r\n                ledger.addPayableTransaction(personToPay, amount);\r\n            }\r\n        });\r\n    }\r\n\r\n    // checking for loop transaction, negate the amount accordingly.\r\n    people.forEach(person => {\r\n        const pairs = findPayableTransactionPairs(person, ledgers);\r\n        processPayableTransactionPairs(pairs);\r\n    });\r\n\r\n    // print logs\r\n    console.log(JSON.stringify(ledgers, null, 2));\r\n    people.forEach(person => {\r\n        const ledger = ledgers[person];\r\n        console.log(ledger.toString());\r\n    });\r\n\r\n    generateSummary({\r\n        people,\r\n        whoSharingJson,\r\n        whatCostJson,\r\n        whoPaidJson\r\n    });\r\n\r\n    return ledgers;\r\n};\r\n\r\nexport const findPayableTransactionPairs = (person1, ledgers) => {\r\n    const pairs = [];\r\n    const ledger1 = ledgers[person1];\r\n    const person1PayableTransactions = ledger1.getPayableTransactions();\r\n    person1PayableTransactions.forEach(person1PayableTransaction => {\r\n        const person2 = person1PayableTransaction.getPersonToPayTo();\r\n        const ledger2 = ledgers[person2];\r\n        const person2PayableTransactions = ledger2.getPayableTransactions();\r\n        person2PayableTransactions.forEach(person2PayableTransaction => {\r\n            const anotherPerson1 = person2PayableTransaction.getPersonToPayTo();\r\n            if (anotherPerson1 === person1) {\r\n                const pair = [{\r\n                    ledger: ledger1,\r\n                    payableTransaction: person1PayableTransaction\r\n                }, {\r\n                    ledger: ledger2,\r\n                    payableTransaction: person2PayableTransaction\r\n                }];\r\n\r\n                pairs.push(pair);\r\n            }\r\n        });\r\n    });\r\n    return pairs;\r\n};\r\n\r\nexport const processPayableTransactionPairs = (payableTransactionPairs) => {\r\n    payableTransactionPairs.forEach(payableTransactionPair => {\r\n        const ledger1 = payableTransactionPair[0].ledger;\r\n        const payableTransaction1 = payableTransactionPair[0].payableTransaction;\r\n        \r\n        const ledger2 = payableTransactionPair[1].ledger;\r\n        const payableTransaction2 = payableTransactionPair[1].payableTransaction;\r\n\r\n        if (payableTransaction1.getAmount() > payableTransaction2.getAmount()) {\r\n            payableTransaction1.setAmount(\r\n                payableTransaction1.getAmount() - payableTransaction2.getAmount()\r\n            );\r\n            ledger2.deletePayableTransaction(payableTransaction2);\r\n        }\r\n        else if (payableTransaction1.getAmount() < payableTransaction2.getAmount()) {\r\n            payableTransaction2.setAmount(\r\n                payableTransaction2.getAmount() - payableTransaction1.getAmount()\r\n            );\r\n            ledger1.deletePayableTransaction(payableTransaction1);\r\n        }\r\n        else {\r\n            // if amount equals\r\n            ledger1.deletePayableTransaction(payableTransaction1);\r\n            ledger2.deletePayableTransaction(payableTransaction2);\r\n        }\r\n    });\r\n};\r\n\r\nexport const generateSummary = ({\r\n    people,\r\n    whoSharingJson,\r\n    whatCostJson,\r\n    whoPaidJson\r\n}) => {\r\n    let summaryStr = '';\r\n\r\n    for (const [item, personWhoPaid] of Object.entries(whoPaidJson)) {\r\n        const cost = Utils.to2DecimalStr(whatCostJson[item]);\r\n        summaryStr += `${personWhoPaid} has paid $${cost} for ${item}.\\n`;\r\n    };\r\n\r\n    for (const [item, peopleBooleanJson] of Object.entries(whoSharingJson)) {\r\n        if (Utils.isObjectEmpty(peopleBooleanJson)) {\r\n            // this json is having the initial value of empty json, so no one is ticked for that item.\r\n            summaryStr += `Nobody is sharing the ${item}.\\n`;\r\n            continue;\r\n        }\r\n\r\n        const peopleYes = [];\r\n        const peopleNo = [];\r\n        for (const [person, boolValue] of Object.entries(peopleBooleanJson)) {\r\n            if (boolValue) {\r\n                peopleYes.push(person);\r\n            }\r\n            else {\r\n                peopleNo.push(person);\r\n            }\r\n        }\r\n\r\n        if (peopleYes.length === 1) {\r\n            const [theOne] = peopleYes;\r\n            summaryStr += `${theOne} is accountable for the ${item}.\\n`;\r\n        }\r\n        else if (peopleNo.length === 1) {\r\n            const [theOne] = peopleNo;\r\n            summaryStr += `Everyone except ${theOne} is sharing the ${item}.\\n`;\r\n        }\r\n        else if (people.length === peopleYes.length) {\r\n            summaryStr += `Everyone is sharing the ${item}.\\n`;\r\n        }\r\n        else if (people.length === peopleNo.length) {\r\n            summaryStr += `Nobody is sharing the ${item}.\\n`;\r\n        }\r\n        else {\r\n            const reducer = (accumulator, currentValue, i) => {\r\n                if (i === 0) {\r\n                    return `${accumulator}${currentValue}`;\r\n                }\r\n                if (i === peopleYes.length - 1) {\r\n                    return `${accumulator} and ${currentValue}`;\r\n                }\r\n                return `${accumulator}, ${currentValue}`;\r\n            };\r\n            summaryStr = peopleYes.reduce(reducer, summaryStr);\r\n            summaryStr += ` is sharing the ${item}.\\n`;\r\n        }\r\n    };\r\n\r\n    console.log(summaryStr);\r\n    return summaryStr;\r\n};","import { useRef, useEffect, useState } from 'react';\r\nimport AddPeople from './AddPeople/addPeople';\r\nimport AddItems from './AddItems/addItems';\r\nimport WhoSharing from './WhoSharing/whoSharing';\r\nimport WhatCost from './WhatCost/whatCost';\r\nimport WhoPaid from './WhoPaid/whoPaid';\r\nimport Summary from './Summary/summary';\r\nimport SwitchTransitionContainer from './SwitchTransitionContainer/switchTransitionContainer';\r\nimport Pagination from './Pagination/pagination';\r\nimport { calculateReturnText } from './calcUtils';\r\n\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [people, setPeople] = useState([]);\r\n  const [items, setItems] = useState([]);\r\n  const [summaryText, setSummaryText] = useState('');\r\n  const [index, setIndex] = useState(0);\r\n  // const [transitionDirection, setTransitionDirection] = useState('left');\r\n  const nodeRef = useRef(null);\r\n\r\n  /* json with item name as the keys */\r\n  const [whoSharingJson, setWhoSharingJson] = useState({});\r\n  const [whatCostJson, setWhatCostJson] = useState({});\r\n  const [whoPaidJson, setWhoPaidJson] = useState({});\r\n  /* ---------- */\r\n\r\n  useEffect(() => {\r\n    items\r\n      .filter(item => (!people.includes(whoPaidJson[item])))\r\n      .forEach(item => (whoPaidJson[item] = ''));\r\n  }, [\r\n    people\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if(!whoSharingJson) return;\r\n\r\n    const keysToBeDelete = Object.keys(whoSharingJson)\r\n      .filter(key => (\r\n        !items.includes(key)\r\n      ));\r\n    \r\n    // ensuring the jsons only have valid items in it.\r\n    keysToBeDelete.forEach(key => {\r\n      delete whoSharingJson[key];\r\n      delete whatCostJson[key];\r\n      delete whoPaidJson[key];\r\n    });\r\n\r\n    setWhoSharingJson((whoSharingJson) => ({...whoSharingJson}));\r\n    setWhatCostJson((whatCostJson) => ({...whatCostJson}));\r\n    setWhoPaidJson((whoPaidJson) => ({...whoPaidJson}));\r\n   }, [items]);\r\n\r\n  useEffect(() => {\r\n    // defining when to do the calculations.\r\n   setSummaryText(calculateReturnText({\r\n      people,\r\n      items,\r\n      whoSharingJson,\r\n      whatCostJson,\r\n      whoPaidJson\r\n    }));\r\n  }, [\r\n      people,\r\n      whoSharingJson,\r\n      whatCostJson,\r\n      whoPaidJson\r\n  ]);\r\n\r\n  const updatePeople = (data) => {\r\n    const dataStr = JSON.stringify(data);\r\n    const peopleStr = JSON.stringify(people);\r\n    if (peopleStr !== dataStr) {\r\n      console.log(`People:\\n${JSON.stringify(data)}`);\r\n      setPeople(data);\r\n    }\r\n  };\r\n\r\n  const updateItems = (data) => {\r\n    const dataStr = JSON.stringify(data);\r\n    const itemsStr = JSON.stringify(items);\r\n    if (itemsStr !== dataStr) {\r\n      console.log(`Items:\\n${JSON.stringify(data)}`);\r\n      setItems(data);\r\n    }\r\n  };\r\n\r\n  let cards = [(\r\n    <AddPeople\r\n      items={people}\r\n      updateItems={updatePeople}\r\n    />\r\n  ), (\r\n    <AddItems\r\n      items={items}\r\n      updateItems={updateItems}\r\n    />\r\n  )];\r\n\r\n  const whoSharingCards = items.map(\r\n    item => (\r\n      <WhoSharing\r\n        key={item}\r\n        itemName={item}\r\n        people={people}\r\n        value={(() => {\r\n          // passing in the json for this item instead of the full whoSharingJson.\r\n          const newValue = {};\r\n          newValue[item] = {...whoSharingJson[item]};\r\n          return newValue;\r\n        })()}\r\n        updateValue={(childValue) => {\r\n          // this childValue contains only the json for this item.\r\n          // so when doing comparison, needs to check with the respective one.\r\n          const childValueStr = JSON.stringify(childValue);\r\n          const whoSharingJsonStr = JSON.stringify(whoSharingJson[item]);\r\n          if (childValueStr !== whoSharingJsonStr) {\r\n            const newValue = {\r\n              ...whoSharingJson,\r\n              ...childValue\r\n            }\r\n            console.log(`WhoSharing:\\n${JSON.stringify(newValue, null, 2)}`);\r\n            setWhoSharingJson(newValue);\r\n          }\r\n        }}\r\n      />\r\n    )\r\n  );\r\n\r\n  const whoPaidCards = items.map(\r\n    item => (\r\n      <WhoPaid\r\n        key={item}\r\n        itemName={item}\r\n        people={people}\r\n        value={(() => {\r\n          const newValue = {};\r\n          if (whoPaidJson[item]) {\r\n            newValue[item] = whoPaidJson[item];\r\n          }\r\n          else {\r\n            newValue[item] = '';\r\n          }\r\n          return newValue;\r\n        })()}\r\n        updateValue={(childValue) => {\r\n          if (childValue) {\r\n            const childValueStr = JSON.stringify(childValue);\r\n            const whoPaidJsonStr = JSON.stringify(whoPaidJson[item]);\r\n            if (childValueStr !== whoPaidJsonStr) {\r\n              const newValue = {\r\n                ...whoPaidJson,\r\n                ...childValue\r\n              }\r\n              console.log(`WhoPaid:\\n${JSON.stringify(newValue, null, 2)}`);\r\n              setWhoPaidJson(newValue);\r\n            }\r\n          }\r\n        }}\r\n      />\r\n    )\r\n  );\r\n\r\n  const whatCostCards = items.map(\r\n    item => (\r\n      <WhatCost\r\n        key={item}\r\n        itemName={item}\r\n        value={whatCostJson[item]}\r\n        updateValue={(childValue) => {\r\n          if (childValue !== undefined && childValue !== null) {\r\n            const childValueStr = JSON.stringify(childValue);\r\n            const whatCostJsonStr = JSON.stringify(whatCostJson[item]);\r\n            if (childValueStr !== whatCostJsonStr) {\r\n              const newValue = {\r\n                ...whatCostJson,\r\n                ...childValue\r\n              }\r\n              console.log(`WhatCost:\\n${JSON.stringify(newValue, null, 2)}`);\r\n              setWhatCostJson(newValue);\r\n            }\r\n          }\r\n        }}\r\n      />\r\n    )\r\n  );\r\n\r\n  cards = [\r\n    ...cards,\r\n    ...whoSharingCards,\r\n    ...whoPaidCards,\r\n    ...whatCostCards\r\n  ];\r\n\r\n  // only add in summary card if there is results\r\n  if (summaryText !== '') {\r\n    cards = [\r\n      ...cards,\r\n      (\r\n        <Summary summaryText={summaryText} />\r\n      )\r\n    ];\r\n  }\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <Pagination\r\n        maxCount={cards.length}\r\n        pageIndex={index}\r\n        updateIndex={(childIndex) => {\r\n          /*\r\n          if (index > childIndex) {\r\n            // prev clicked\r\n            console.log('right');\r\n            setTransitionDirection('right');\r\n          }\r\n          else if (index < childIndex) {\r\n            // next clicked\r\n            console.log('left');\r\n            setTransitionDirection('left');\r\n          }\r\n          */\r\n          if (childIndex !== index) {\r\n            setIndex(childIndex);\r\n          }\r\n        }}\r\n      />\r\n\r\n      <SwitchTransitionContainer\r\n        keyIndex={index}\r\n      >\r\n        {cards[index]}\r\n      </SwitchTransitionContainer>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}